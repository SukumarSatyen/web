{"version":3,"sources":["sourceData.js","sourceComponent.js","App.js","reportWebVitals.js","index.js"],"names":["booksArray","id","imageUrl","title","author","Book","clickHandler","alert","className","src","alt","onClick","BookList","map","bookVar","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAaA,G,MAAa,CAC1B,CACEC,GAAI,EACJC,SAAW,uDACZC,MAAO,oBACPC,OAAQ,sBACP,CACAH,GAAI,EACLC,SAAW,uDACXC,MAAO,oBACPC,OAAQ,sBACP,CACAH,GAAI,EACJC,SAAW,oFACZC,MAAO,oBACPC,OAAQ,wB,OCFMC,EAXF,SAAC,GAAiC,IAA/BH,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAEvBE,EAAe,WAAQC,MAAM,UACnC,OAAS,0BAASC,UAAU,UAAnB,cAA8B,qBAAKC,IAAKP,EAAUQ,IAAI,KAAtD,KAA6D,oBAAIC,QAASL,EAAb,SAA6BH,IAA1F,MAAwG,6BAAKC,IACtH,wBAAQO,QAASL,EAAjB,+BCIJ,SAASM,IACP,OAAU,0BAASJ,UAAU,cAAnB,UACHR,EAAWa,KAAI,SAACC,EAASC,GAAY,OAAS,cAAC,EAAD,eAAsBD,GAAXC,MADtD,YASGC,MAJb,WACA,OACE,cADO,CACP,OAAKR,UAAU,MAAf,eAAuB,cAACI,EAAD,IAAvB,aCNWK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0e128d7e.chunk.js","sourcesContent":["export const booksArray = [  // named export\n{ // Usage of JavaScript in JSX\n  id: 1,\n  imageUrl : 'https://avatars.githubusercontent.com/u/72961428?v=4',\n title: 'Title of 1st Book',\n author: 'Sukumar Satyen 1st'\n},{\n  id: 2,\n imageUrl : 'https://avatars.githubusercontent.com/u/29114445?v=4',\n title: 'Title of 2nd Book',\n author: 'Sukumar Satyen 2nd'\n},{\n  id: 3,\n  imageUrl : 'https://cdn.slidesharecdn.com/profile-photo-sukumarsatyen-96x96.jpg?cb=1522814840',\n title: 'Title of 3rd Book',\n author: 'Sukumar Satyen 3rd'\n}];   ","import React from 'react'\n\nconst Book = ({ imageUrl, title, author }) => { // Book contains other details // props destructuring within curly braces\n  // const { imageUrl, title, author } = props; // props destructuring consolidated aforeasaid \n    const clickHandler = () => { alert('Hello');}; // https://developer.mozilla.org/en-US/docs/Web/API/Event/bubbles\n    return ( <article className='bookcss'> <img src={imageUrl} alt='' />  <h1 onClick={clickHandler} >{title}</h1>   <h4>{author}</h4>   \n    <button onClick={clickHandler}>Event Example</button></article>   ); // function names are written within curly braces\n}\n// const Image = () => <img src = {bookDetailsFirst.imageUrl} alt =''/> // JavaScript in JSX is represented within Curly Braces\n// const Title = () => <h1>{bookDetailsFirst.title}</h1>\n// const Author = () => <h4 style={{color: '#555ddd',fontSize: '0.75rem', marginTop: '0.25rem'}}>{bookDetailsFirst.author}</h4>\n\n\nexport default Book \n// default export \n","// import logo from './logo.svg';\nimport './App.css';\nimport {booksArray} from './sourceData'; // named import uses curly braces\nimport Book from './sourceComponent'; // default import WITHOUT curly braces and keyword Book can be renamed as below\n// import RenamedBook from './sourceComponent'; // after rename, RenamedBook need to replace every occurence of Book below by RenamedBook keyword\n// whatever import, which is NOT within curly braces, that can be renamed\n\n\n// another functional component\n\nfunction BookList() { //BookList contains Book\n  return (  <section className='booklistcss'> \n    {    booksArray.map((bookVar, index) => { return ( <Book key={index} {...bookVar}></Book> );     })}  {/* usage of index */} {/* usage of spread operator */}\n  </section>      \n  );  }\n\n  function App() { // first letter is capital of this stateless functional component name which returns below JSX\n  return ( // JSX begins\n    <div className=\"App\">  <BookList />  {/* Start of JSX Comment <Some Obsolete HTML code> End of JSX Comment */} </div>  );\n} // end of curly braces\nexport default App;\n\n// <img src = {img} alt='' />{/* name of prop within curly braces fetches value of prop from BookList */} <Image />  {/* Refer to difference due to two different image tags */}\n// <h1>{title}</h1> <Title /> {/* Refer to difference due to two different Title usage */}\n// <h1>{author}</h1> <Author />   {/* Refer to difference due to two different Author usage */}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'; // ES6 module, main dependency\nimport ReactDOM from 'react-dom'; // another dep from node_modules\nimport './index.css'; // css imported\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n    {/* self closing tag mandatory */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}